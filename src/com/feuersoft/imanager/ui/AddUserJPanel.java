/*
 * Copyright (c) 2011, Fritz Feuerbacher.
 */
package com.feuersoft.imanager.ui;

import com.feuersoft.imanager.enums.UserGroup;
import com.feuersoft.imanager.persistence.Associate;
import com.feuersoft.imanager.persistence.HibernateDataManagerDyn;
import com.feuersoft.imanager.persistence.Store;
import javax.swing.DefaultComboBoxModel;

/**
  * @author Fritz Feuerbacher
 */
public class AddUserJPanel extends javax.swing.JPanel {

    public static final String DISPLAY_NAME = "Edit Associate";
    private final HibernateDataManagerDyn hdm = new HibernateDataManagerDyn();

    /** Creates new form AddUserJPanel */
    public AddUserJPanel()
    {
      initComponents();

      for (UserGroup ug : UserGroup.values())
      {
        ((DefaultComboBoxModel)jComboBoxUserGroup.getModel()).addElement(ug);
      }

      for (Store s : hdm.getAllStores())
      {
        ((DefaultComboBoxModel)jComboBoxStoreLocation.getModel()).addElement(s);
      }
    }

    /** Creates new form AddUserJPanel
    * @param user - the sales associate.
    * @param admin - is the user an administrator?
    */
    public AddUserJPanel(Associate user, boolean admin)
    {
      this();
      setUserGroup(user.getUsergroup());
      setActive(user.isActive());
      setSendEmail(user.isSendemail());
      setChangeSellPrice(user.isChangeSellPrice());
      setPrintDialog(user.isPrintDialog());
      // Don't want to set the password during editing.
      // If the users password should be changed, then a new
      // password will be entered.
      //setPassword(user.getPassword());
      setEmailAddress(user.getEmailaddress());
      setOrganization(user.getOrganization());
      setLoginName(user.getLoginName());
      setFirstName(user.getFirstName());
      setLastName(user.getLastName());
      setRestrictStore(user.isRestrictStoreChange());
      jFormattedTextFieldPhone.setValue(user.getPhonenumber());

      // Regular users do not need to edit these items.
      jCheckBoxActive.setEnabled(admin);
      jComboBoxUserGroup.setEnabled(admin);
      if (null != user.getStore())
      {
        jComboBoxStoreLocation.setSelectedItem(user.getStore());
      }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTextFieldLastName = new javax.swing.JTextField();
    jPasswordFieldPassword = new javax.swing.JPasswordField();
    jComboBoxUserGroup = new javax.swing.JComboBox();
    jLabel1 = new javax.swing.JLabel();
    jTextFieldOrganization = new javax.swing.JTextField();
    jTextFieldEmailAddress = new javax.swing.JTextField();
    jCheckBoxActive = new javax.swing.JCheckBox();
    jCheckBoxSendEmail = new javax.swing.JCheckBox();
    jPasswordFieldPasswordCheck = new javax.swing.JPasswordField();
    javax.swing.text.MaskFormatter mask = null;
    try {
      mask = new javax.swing.text.MaskFormatter("(###) ###-####");
      mask.setPlaceholderCharacter('_');
    } catch (java.text.ParseException pe){}
    jFormattedTextFieldPhone = new javax.swing.JFormattedTextField(mask);
    jLabel7 = new javax.swing.JLabel();
    jComboBoxStoreLocation = new javax.swing.JComboBox();
    jTextFieldLoginName = new javax.swing.JTextField();
    jTextFieldFirstName = new javax.swing.JTextField();
    jCheckBoxDisplayPrintDialog = new javax.swing.JCheckBox();
    jCheckBoxRestrictStore = new javax.swing.JCheckBox();
    jCheckBoxChangeSellPrice = new javax.swing.JCheckBox();

    jTextFieldLastName.setBorder(javax.swing.BorderFactory.createTitledBorder("Last Name"));

    jPasswordFieldPassword.setToolTipText("Leave blank if no password change is desired");
    jPasswordFieldPassword.setBorder(javax.swing.BorderFactory.createTitledBorder("Password"));

    jComboBoxUserGroup.setAutoscrolls(true);

    jLabel1.setText("Associate Type");

    jTextFieldOrganization.setBorder(javax.swing.BorderFactory.createTitledBorder("Organization"));

    jTextFieldEmailAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Email Address"));

    jCheckBoxActive.setText("Associate Active");
    jCheckBoxActive.setToolTipText("Associate is active an can use the system");

    jCheckBoxSendEmail.setText("Send Email on Triggers");

    jPasswordFieldPasswordCheck.setToolTipText("Leave blank if no password change is desired");
    jPasswordFieldPasswordCheck.setBorder(javax.swing.BorderFactory.createTitledBorder("Confirm Password"));

    jFormattedTextFieldPhone.setBorder(javax.swing.BorderFactory.createTitledBorder("Phone Number"));

    jLabel7.setText("Store");

    jComboBoxStoreLocation.setRenderer(new javax.swing.DefaultListCellRenderer() {
      @Override
      public void paint(java.awt.Graphics g) {
        setForeground(java.awt.Color.BLACK);
        super.paint(g);
      }
    });
    jComboBoxStoreLocation.setAutoscrolls(true);

    jTextFieldLoginName.setBorder(javax.swing.BorderFactory.createTitledBorder("Login Name"));

    jTextFieldFirstName.setBorder(javax.swing.BorderFactory.createTitledBorder("First Name"));

    jCheckBoxDisplayPrintDialog.setText("Display Print Dialog");

    jCheckBoxRestrictStore.setText("Restrict to Store");
    jCheckBoxRestrictStore.setToolTipText("Restrict associate to selling from their store only");

    jCheckBoxChangeSellPrice.setText("Change Sell Price");
    jCheckBoxChangeSellPrice.setToolTipText("Change sell price on invoice");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jFormattedTextFieldPhone, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBoxUserGroup, javax.swing.GroupLayout.Alignment.LEADING, 0, 164, Short.MAX_VALUE))
              .addComponent(jLabel1)
              .addComponent(jTextFieldLoginName)
              .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jComboBoxStoreLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(jLabel7)
                  .addComponent(jPasswordFieldPasswordCheck)
                  .addComponent(jTextFieldOrganization, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                  .addComponent(jTextFieldEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                  .addComponent(jTextFieldLastName))
                .addGap(0, 0, Short.MAX_VALUE))))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jCheckBoxActive)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBoxSendEmail)
            .addGap(10, 10, 10)
            .addComponent(jCheckBoxDisplayPrintDialog)
            .addGap(12, 12, 12))
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
            .addComponent(jCheckBoxRestrictStore)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jCheckBoxChangeSellPrice)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(35, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTextFieldLoginName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jTextFieldOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jPasswordFieldPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(16, 16, 16)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jFormattedTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jTextFieldEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jComboBoxUserGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel7)
            .addGap(4, 4, 4)
            .addComponent(jComboBoxStoreLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jCheckBoxActive)
          .addComponent(jCheckBoxSendEmail)
          .addComponent(jCheckBoxDisplayPrintDialog))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jCheckBoxRestrictStore)
          .addComponent(jCheckBoxChangeSellPrice))
        .addContainerGap(20, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox jCheckBoxActive;
  private javax.swing.JCheckBox jCheckBoxChangeSellPrice;
  private javax.swing.JCheckBox jCheckBoxDisplayPrintDialog;
  private javax.swing.JCheckBox jCheckBoxRestrictStore;
  private javax.swing.JCheckBox jCheckBoxSendEmail;
  private javax.swing.JComboBox jComboBoxStoreLocation;
  private javax.swing.JComboBox jComboBoxUserGroup;
  private javax.swing.JFormattedTextField jFormattedTextFieldPhone;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JPasswordField jPasswordFieldPassword;
  private javax.swing.JPasswordField jPasswordFieldPasswordCheck;
  private javax.swing.JTextField jTextFieldEmailAddress;
  private javax.swing.JTextField jTextFieldFirstName;
  private javax.swing.JTextField jTextFieldLastName;
  private javax.swing.JTextField jTextFieldLoginName;
  private javax.swing.JTextField jTextFieldOrganization;
  // End of variables declaration//GEN-END:variables

  public UserGroup getUserGroup()
  {
    return (UserGroup)jComboBoxUserGroup.getSelectedItem();
  }

  private void setUserGroup(UserGroup usergroup)
  {
    ((DefaultComboBoxModel)jComboBoxUserGroup.getModel())
                            .setSelectedItem(usergroup);
  }

  public boolean isActive()
  {
    return jCheckBoxActive.isSelected();
  }

  private void setActive(boolean active)
  {
    jCheckBoxActive.setSelected(active);
  }
  
  public boolean isPrintDialog()
  {
    return jCheckBoxDisplayPrintDialog.isSelected();
  }

  private void setPrintDialog(boolean printDialog)
  {
    jCheckBoxDisplayPrintDialog.setSelected(printDialog);
  }

  public boolean isSendEmail()
  {
    return jCheckBoxSendEmail.isSelected();
  }

  private void setSendEmail(boolean sendemail)
  {
    jCheckBoxSendEmail.setSelected(sendemail);
  }
  
  public boolean isRestrictStore()
  {
    return jCheckBoxRestrictStore.isSelected();
  }

  private void setRestrictStore(boolean restrictStore)
  {
    jCheckBoxRestrictStore.setSelected(restrictStore);
  }  

  public boolean isChangeSellPrice()
  {
    return jCheckBoxChangeSellPrice.isSelected();
  }

  private void setChangeSellPrice(boolean changeSellPrice)
  {
    jCheckBoxChangeSellPrice.setSelected(changeSellPrice);
  }  
  
  public String getPassword()
  {
    return String.copyValueOf(jPasswordFieldPassword.getPassword());
  }
  
  public String getPasswordCheck()
  {
    return String.copyValueOf(jPasswordFieldPasswordCheck.getPassword());
  }

  public String getEmailAddress()
  {
    return jTextFieldEmailAddress.getText();
  }

  private void setEmailAddress(String emailaddress)
  {
    jTextFieldEmailAddress.setText(emailaddress);
  }

  public String getOrganization()
  {
    return jTextFieldOrganization.getText();
  }

  private void setOrganization(String organization)
  {
    jTextFieldOrganization.setText(organization);
  }

  public String getPhoneNumber()
  {
    String phoneNumber = (String)jFormattedTextFieldPhone.getValue();
    
    if (null == phoneNumber)
    {
      phoneNumber = "";
    }
    return phoneNumber;
  }

  public String getLoginName()
  {
    return jTextFieldLoginName.getText();
  }

  private void setLoginName(String loginName)
  {
    jTextFieldLoginName.setText(loginName);
  }
  
  public String getFirstName()
  {
    return jTextFieldFirstName.getText();
  }

  private void setFirstName(String firstName)
  {
    jTextFieldFirstName.setText(firstName);
  }  

  public String getLastName()
  {
    return jTextFieldLastName.getText();
  }

  private void setLastName(String lastName)
  {
    jTextFieldLastName.setText(lastName);
  }    
  
  public Store getStoreLocation()
  {
    return (Store)jComboBoxStoreLocation.getSelectedItem();
  }
}
