/*
 * Copyright (c) 2011, Fritz Feuerbacher.
 */
package com.feuersoft.imanager.ui;

import com.feuersoft.imanager.persistence.HibernateDataManagerDyn;
import com.feuersoft.imanager.persistence.ProductLine;
import com.feuersoft.imanager.persistence.MatrixItem;
import java.util.List;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 * @author Fritz Feuerbacher
 */
public class PriceMatrixConfigJPanel 
        extends javax.swing.JPanel
{
    public static final String DISPLAY_TITLE = "Price Matrix Configuration";

    private final HibernateDataManagerDyn hdm = new HibernateDataManagerDyn();

    /** Creates new form PriceMatrixConfigJPanel
     * @param priceMatrix - The customer pricing matrix.
     */
    public PriceMatrixConfigJPanel(Map<ProductLine, MatrixItem> priceMatrix)
    {
       initComponents();
       // Disable auto resizing
       jTablePriceMatrix.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
       TableColumn col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.VENDOR_NAME_COL);
       col.setMinWidth(227);
       col.setMaxWidth(227);
       col.setPreferredWidth(150);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.LINE_NAME_COL);
       col.setMinWidth(75);
       col.setMaxWidth(75);
       col.setPreferredWidth(200);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.A_COL);
       col.setMinWidth(60);
       col.setMaxWidth(60);
       col.setPreferredWidth(60);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.B_COL);
       col.setMinWidth(50);
       col.setMaxWidth(50);
       col.setPreferredWidth(40);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.C_COL);
       col.setMinWidth(50);
       col.setMaxWidth(50);
       col.setPreferredWidth(40);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.D_COL);
       col.setMinWidth(50);
       col.setMaxWidth(50);
       col.setPreferredWidth(40);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.E_COL);
       col.setMinWidth(50);
       col.setMaxWidth(50);
       col.setPreferredWidth(40);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.F_COL);
       col.setMinWidth(50);
       col.setMaxWidth(50);
       col.setPreferredWidth(40);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.W_COL);
       col.setMinWidth(65);
       col.setMaxWidth(65);
       col.setPreferredWidth(40);
       col = jTablePriceMatrix.getColumnModel().getColumn(PriceMatrixConfigTableModel.DISCOUNT_COL);
       col.setMinWidth(50);
       col.setMaxWidth(50);
       col.setPreferredWidth(40);

       jTablePriceMatrix.getTableHeader().setReorderingAllowed(false);
       jTablePriceMatrix.getTableHeader().setResizingAllowed(false);
       jTablePriceMatrix.setRowSelectionAllowed(false);
       //jTablePriceMatrix.setColumnSelectionAllowed(false);

       for (ProductLine pl : hdm.getAllProductLines())
       {
         if (priceMatrix.containsKey(pl))
         {
           // The customer has a price level assigned to it.
           MatrixItem mi = priceMatrix.get(pl);
           priceMatrixConfig.addLine(mi);
         }
         else
         {
           // Add a new default price level.
           MatrixItem mi = new MatrixItem(pl, pl.getDefaultPriceLevel(), 0.0d);
           priceMatrixConfig.addLine(mi);
         }
       }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane2 = new javax.swing.JScrollPane();
    jTablePriceMatrix = new com.feuersoft.imanager.ui.ITable();

    jTablePriceMatrix.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {},
        {},
        {},
        {}
      },
      new String [] {

      }
    ));
    priceMatrixConfig = new PriceMatrixConfigTableModel();
    jTablePriceMatrix.setModel(priceMatrixConfig);
    jScrollPane2.setViewportView(jTablePriceMatrix);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane2;
  private PriceMatrixConfigTableModel priceMatrixConfig;
  private javax.swing.JTable jTablePriceMatrix;
  // End of variables declaration//GEN-END:variables

  public List<MatrixItem> getTableItemList()
  {
    return priceMatrixConfig.getTableItems();
  }
}
