/*
 * Copyright (c) 2011, Fritz Feuerbacher.
 */
package com.feuersoft.imanager.ui;

import com.feuersoft.imanager.persistence.Store;
import java.util.Date;
import javax.swing.SpinnerNumberModel;

/**
 * @author Fritz Feuerbacher
 */
public class EditStoreJPanel 
     extends javax.swing.JPanel
{
    public static final String DISPLAY_NAME = "Edit Store";

    /** Creates new form EditCustomerJPanel */
    public EditStoreJPanel()
    {
      initComponents();
    }

    /** Creates new form EditCustomerJPanel
     * @param store - store to edit.
     */
    public EditStoreJPanel(Store store)
    {
      this();
      jSpinnerNumberPrintCopies.setValue(new Integer(store.getPrintNumInvCopies()));
      jFormattedTextFieldTotalSales.setValue(store.getTotalSales());
      jFormattedTextFieldYearToDateSales.setValue(store.getThisYearSales());
      jSpinnerTaxRate.setValue(store.getTaxRate());
      jTextFieldAddress.setText(store.getStreetAddress());
      jTextFieldCity.setText(store.getCity());
      jTextFieldManagerEmail.setText(store.getManagerEmail());
      jTextFieldManagerName.setText(store.getManagerName());
      jTextFieldCountry.setText(store.getCountry());
      jFormattedTextFieldFax.setValue(store.getFaxNumber());
      jFormattedTextFieldPhone.setValue(store.getPhoneNumber());
      jTextFieldStoreName.setText(store.getStoreName());
      jTextFieldState.setText(store.getStateOrProvince());
      jTextFieldZip.setText(store.getZipCode());
      jCheckBoxDisplayPrintDialog.setSelected(store.isPrintDialog());
      jXDatePickerPostingDate.setDate(store.getPostingDate());
      jCheckBoxTaxCore.setSelected(store.isTaxCore());
      // The print dialog configuration is now attached to the
      // associate object.  Makes more sense for the choice of
      // print dialog to be on a user by user basis.
      jCheckBoxDisplayPrintDialog.setVisible(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jTextFieldStoreName = new javax.swing.JTextField();
      jTextFieldAddress = new javax.swing.JTextField();
      jTextFieldCity = new javax.swing.JTextField();
      jTextFieldState = new javax.swing.JTextField();
      jTextFieldZip = new javax.swing.JTextField();
      jTextFieldCountry = new javax.swing.JTextField();
      jTextFieldManagerName = new javax.swing.JTextField();
      jTextFieldManagerEmail = new javax.swing.JTextField();
      jSpinnerNumberPrintCopies = new javax.swing.JSpinner();
      jLabel6 = new javax.swing.JLabel();
      javax.swing.text.MaskFormatter mask = null;
      try {
         mask = new javax.swing.text.MaskFormatter("(###) ###-####");
         mask.setPlaceholderCharacter('_');
      } catch (java.text.ParseException pe){}
      jFormattedTextFieldPhone = new javax.swing.JFormattedTextField(mask);
      jFormattedTextFieldYearToDateSales = new javax.swing.JFormattedTextField();
      jFormattedTextFieldTotalSales = new javax.swing.JFormattedTextField();
      javax.swing.text.MaskFormatter mask2 = null;
      try {
         mask2 = new javax.swing.text.MaskFormatter("(###) ###-####");
         mask2.setPlaceholderCharacter('_');
      } catch (java.text.ParseException pe){}
      jFormattedTextFieldFax = new javax.swing.JFormattedTextField(mask2);
      jCheckBoxDisplayPrintDialog = new javax.swing.JCheckBox();
      jXDatePickerPostingDate = new org.jdesktop.swingx.JXDatePicker();
      jLabel1 = new javax.swing.JLabel();
      jSpinnerTaxRate = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(0,0,1,.005));
      jSpinnerTaxRate.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerTaxRate,"0.0%"));
      jLabel2 = new javax.swing.JLabel();
      jCheckBoxTaxCore = new javax.swing.JCheckBox();

      jTextFieldStoreName.setBorder(javax.swing.BorderFactory.createTitledBorder("Store Name"));

      jTextFieldAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));

      jTextFieldCity.setBorder(javax.swing.BorderFactory.createTitledBorder("City"));

      jTextFieldState.setBorder(javax.swing.BorderFactory.createTitledBorder("State"));

      jTextFieldZip.setBorder(javax.swing.BorderFactory.createTitledBorder("Zip"));

      jTextFieldCountry.setBorder(javax.swing.BorderFactory.createTitledBorder("Country"));

      jTextFieldManagerName.setBorder(javax.swing.BorderFactory.createTitledBorder("Manager Name"));

      jTextFieldManagerEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("Manager Email"));

      jSpinnerNumberPrintCopies.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
      jSpinnerNumberPrintCopies.setToolTipText("Select 1 to 10");

      jLabel6.setText("Print # of Copies");

      jFormattedTextFieldPhone.setBorder(javax.swing.BorderFactory.createTitledBorder("Phone Number"));

      jFormattedTextFieldYearToDateSales.setBorder(javax.swing.BorderFactory.createTitledBorder("Year to Date Sales"));
      jFormattedTextFieldYearToDateSales.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
      jFormattedTextFieldYearToDateSales.setValue(new Double(0.0));

      jFormattedTextFieldTotalSales.setBorder(javax.swing.BorderFactory.createTitledBorder("Total Sales"));
      jFormattedTextFieldTotalSales.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
      jFormattedTextFieldTotalSales.setValue(new Double(0.0));

      jFormattedTextFieldFax.setBorder(javax.swing.BorderFactory.createTitledBorder("Fax Number"));

      jCheckBoxDisplayPrintDialog.setText("Display Print Dialog");

      jLabel1.setText("Posting Date");

      jLabel2.setText("Tax Rate");

      jCheckBoxTaxCore.setText("Tax Core");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(jTextFieldStoreName)
               .addComponent(jTextFieldAddress)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(jTextFieldCountry)
                     .addComponent(jTextFieldCity, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(jFormattedTextFieldPhone)
                     .addComponent(jTextFieldState, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(jFormattedTextFieldFax)
                     .addComponent(jTextFieldZip, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))
               .addComponent(jTextFieldManagerName)
               .addComponent(jTextFieldManagerEmail)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                           .addComponent(jSpinnerTaxRate, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                           .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxTaxCore)
                        .addGap(192, 192, 192))
                     .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(jSpinnerNumberPrintCopies, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                           .addComponent(jLabel1)
                           .addComponent(jXDatePickerPostingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(jFormattedTextFieldYearToDateSales, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldTotalSales, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jCheckBoxDisplayPrintDialog)))))
            .addContainerGap(27, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTextFieldStoreName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(jTextFieldState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jTextFieldZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jFormattedTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jFormattedTextFieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jTextFieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextFieldManagerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextFieldManagerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                           .addComponent(jFormattedTextFieldTotalSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(jFormattedTextFieldYearToDateSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                     .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                           .addComponent(jSpinnerTaxRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(jCheckBoxTaxCore))))
                  .addComponent(jLabel6)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerNumberPrintCopies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jCheckBoxDisplayPrintDialog))))
               .addGroup(layout.createSequentialGroup()
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel1)
                     .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jXDatePickerPostingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                  .addGap(1, 1, 1)))
            .addContainerGap(28, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JCheckBox jCheckBoxDisplayPrintDialog;
   private javax.swing.JCheckBox jCheckBoxTaxCore;
   private javax.swing.JFormattedTextField jFormattedTextFieldFax;
   private javax.swing.JFormattedTextField jFormattedTextFieldPhone;
   private javax.swing.JFormattedTextField jFormattedTextFieldTotalSales;
   private javax.swing.JFormattedTextField jFormattedTextFieldYearToDateSales;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel6;
   private javax.swing.JSpinner jSpinnerNumberPrintCopies;
   private javax.swing.JSpinner jSpinnerTaxRate;
   private javax.swing.JTextField jTextFieldAddress;
   private javax.swing.JTextField jTextFieldCity;
   private javax.swing.JTextField jTextFieldCountry;
   private javax.swing.JTextField jTextFieldManagerEmail;
   private javax.swing.JTextField jTextFieldManagerName;
   private javax.swing.JTextField jTextFieldState;
   private javax.swing.JTextField jTextFieldStoreName;
   private javax.swing.JTextField jTextFieldZip;
   private org.jdesktop.swingx.JXDatePicker jXDatePickerPostingDate;
   // End of variables declaration//GEN-END:variables

  public Integer getNumberPrintCopies()
  {
    return ((Integer)jSpinnerNumberPrintCopies.getValue()).intValue();
  }

  public double getTotalSales()
  {
    return ((Number)jFormattedTextFieldTotalSales.getValue()).doubleValue();
  }

  public double getTaxRate()
  {
    return ((SpinnerNumberModel)jSpinnerTaxRate.getModel())
                                     .getNumber().doubleValue();    
  }

  public double getYearToDateSales()
  {
    return ((Number)jFormattedTextFieldYearToDateSales.getValue()).doubleValue();
  }

  public String getStoreName()
  {
    return jTextFieldStoreName.getText();
  }

  public String getAddress()
  {
    return jTextFieldAddress.getText();
  }

  public String getCity()
  {
    return jTextFieldCity.getText();
  }

  public String getManagerEmail()
  {
    return jTextFieldManagerEmail.getText();
  }

  public String getManagerName()
  {
    return jTextFieldManagerName.getText();
  }

  public String getCountry()
  {
    return jTextFieldCountry.getText();
  }

  public String getFaxNumber()
  {
    String faxNumber = (String)jFormattedTextFieldFax.getValue();
    
    if (null == faxNumber)
    {
      faxNumber = "";
    }
    return faxNumber;     
  }

  public String getPhoneNumber()
  {
    String phoneNumber = (String)jFormattedTextFieldPhone.getValue();
    
    if (null == phoneNumber)
    {
      phoneNumber = "";
    }
    return phoneNumber;
  }

  public String getState()
  {
    return jTextFieldState.getText();
  }

  public String getZip()
  {
    return jTextFieldZip.getText();
  }

  public boolean isPrintDialog()
  {
    return jCheckBoxDisplayPrintDialog.isSelected();
  }
  
  public boolean isTaxCore()
  {
    return jCheckBoxTaxCore.isSelected();
  }  
  public Date getPostingDate()
  {
    return jXDatePickerPostingDate.getDate();
  }
}
